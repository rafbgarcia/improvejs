// Generated by CoffeeScript 1.3.3
(function() {
  var _Number;

  _Number = Number.prototype;

  _Number.times = function(fn) {
    var i, _i, _ref, _results;
    _results = [];
    for (i = _i = 0, _ref = this.valueOf(); 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      _results.push(fn(i));
    }
    return _results;
  };

  _Number.odd = function() {
    return this.valueOf() % 2 !== 0;
  };

  _Number.multiple_of = _Number.multipleOf = function(n) {
    return this.valueOf() % n === 0;
  };

  _Number.divider_of = _Number.dividerOf = function(n) {
    return n % this.valueOf() === 0;
  };

  _Number.upto = function(n, fn) {
    var i, newArr, val, _i, _j, _len, _results, _results1;
    val = this.valueOf();
    newArr = (function() {
      _results = [];
      for (var _i = val; val <= n ? _i <= n : _i >= n; val <= n ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this);
    if (typeof fn !== 'function') {
      if (val < n) {
        return newArr;
      } else if (val === n) {
        return [val];
      } else {
        return [];
      }
    }
    _results1 = [];
    for (_j = 0, _len = newArr.length; _j < _len; _j++) {
      i = newArr[_j];
      _results1.push(fn(i, newArr));
    }
    return _results1;
  };

  _Number.downto = function(n, fn) {
    var i, newArr, val, _i, _j, _len, _results, _results1;
    val = this.valueOf();
    newArr = (function() {
      _results = [];
      for (var _i = val; val <= n ? _i <= n : _i >= n; val <= n ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this);
    if (typeof fn !== 'function') {
      if (val > n) {
        return newArr;
      } else if (val === n) {
        return [val];
      } else {
        return [];
      }
    }
    _results1 = [];
    for (_j = 0, _len = newArr.length; _j < _len; _j++) {
      i = newArr[_j];
      _results1.push(fn(i, newArr));
    }
    return _results1;
  };

  _Number.min = _Number.mins = _Number.minute = _Number.minutes = function() {
    return this.valueOf() * 60;
  };

  _Number.hour = _Number.hours = function() {
    return this.valueOf() * 60..minutes();
  };

  _Number.day = _Number.days = function() {
    return this.valueOf() * 24..hours();
  };

  _Number.week = _Number.weeks = function() {
    return this.valueOf() * 7..days();
  };

  _Number.ago = function() {
    return Date.now().milli_to_sec() - this.valueOf();
  };

  _Number.from_now = _Number.fromNow = function() {
    return Date.now().milli_to_sec() + this.valueOf();
  };

  _Number.to_d = _Number.to_date = _Number.toDate = function() {
    return new Date(this.valueOf().sec_to_milli());
  };

  _Number.days_in_month = _Number.daysInMonth = function() {
    var date;
    date = new Date();
    return new Date(date.getFullYear(), this.valueOf() + 1, 0).getDate();
  };

  _Number.days_in_month_of = _Number.daysInMonthOf = function(year) {
    return new Date(year, this.valueOf() + 1, 0).getDate();
  };

  _Number.month_name = _Number.monthName = function(lang) {
    lang = lang || 'en';
    return Date.locale[lang] && Date.locale[lang].month_names[this.valueOf()];
  };

  _Number.short_month_name = _Number.shortMonthName = function(lang) {
    lang = lang || 'en';
    return Date.locale[lang] && Date.locale[lang].month_names_short[this.valueOf()];
  };

  _Number.day_name = _Number.dayName = function(lang) {
    lang = lang || 'en';
    return Date.locale[lang] && Date.locale[lang].day_names[this.valueOf()];
  };

  _Number.short_day_name = _Number.shortDayName = function(lang) {
    lang = lang || 'en';
    return Date.locale[lang] && Date.locale[lang].day_names_short[this.valueOf()];
  };

  _Number.milli_to_sec = _Number.milliToSeconds = function() {
    return parseInt(this.valueOf() / 1000);
  };

  _Number.sec_to_milli = _Number.secToMilli = function() {
    return this.valueOf() * 1000;
  };

}).call(this);
